TEI Boilerplate

Contents:
	About TEI Boilerplate
	Rationale
	How It Works
	Using it in Your Project
	Customizing the Look
	
About TEI Boilerplate

TEI Boilerplate is a lightweight solution for displaying styled TEI content directly in modern browsers. With TEI Boilerplate, plain TEI XML files can be served on the web without server-side processing or translation to HTML. This bridges the gap between the richness of TEI-encoded documents and the usability of the web.

Rationale

TEI is a language designed primarily to express the content of documents. Projects that use TEI are responsible for developing their own methods of augmenting or converting it to a presentation-ready state. Two potential paths to reach this goal are:

* Converting the TEI to HTML and CSS via XSLT
* Attaching a CSS stylesheet directly to the TEI XML

Both of these approaches have advantages and drawbacks. While HTML is the language of the web and, as such, is well supported by user agents, its descriptive capability is much less than TEI. This means that much of the data that project teams spend valuable time encoding is not available within the context of the HTML document. However, the browser, understands HTML very well and knows, for example, when to initiate retrieval of a document based on certain user events, such as clicking a link. The second option, CSS-styled TEI allows for all of the TEI data to be displayed and styled in context. However, just because the browser can display the XML, it doesn’t mean that it knows what any of the markup is supposed to do. Links within the TEI document, for example, will not be clickable. They will be assumed to be merely content to be displayed.

TEI Boilerplate bridges the gap between these two approaches by creating an environment in which TEI XML is styled in context but features expected of the web, such as rendering images and providing usable links, are enabled. We accomplish this by making use of the built-in XSLT capabilities of browsers to embed the TEI XML within a minimal HTML5 shell document. Where possible, the original content of the TEI document is maintained and changes are made only to make possible features like links and images.

How It Works

When a TEI XML file that uses TEI Boilerplate is accessed by a browser, the browser reads a line in the file that indicates that the XML should be processed by the TEI Boilerplate XSL stylesheet. The browser then processes the TEI according to the rules of the stylesheet, which results in an HTML5 shell document stuffed with the TEI. Certain elements of the TEI are converted to HTML elements, so that links work and images are displayed. The HTML shell contains a link to the TEI Boilerplate CSS file, which tells the browser how to style the full document.

Using it in Your Project

We have designed TEI Boilerplate to be easy to add to your existing TEI files. You will need three things:

1. Space on a web server
2. Your TEI file(s)
3. TEI Boilerplate

With those three things procured, we can proceed with making the project work with TEI Boilerplate:

1. Place a copy of your TEI file(s) in the space on your web server. For the purposes of this documentation, we’ll assume you put it in the root folder of the web space. If you don’t have any TEI handy, just move in the eg folder along with the folders in step 3.
2. Expand the TEI Boilerplate zip file
3. Copy the following folders from the TEI Boilerplate folder (the one you just unzipped) to the same place you put your TEI file(s):
	css
	xslt
	images
	js
4. Open your TEI file(s) in a text editor and add the following processing instruction above the root TEI element: <?xml-stylesheet type="text/xsl" href="../xslt/teibp.xsl"?>

Your TEI is now ready to serve. Point a modern browser to the URL for your TEI XML file and it should now be styled and have working links and images.

Customizing the Look

We have tried to provide an aesthetically pleasing default stylesheet, but we understand that this won’t fit everyone’s needs. There are three ways to customize the CSS for your project:

1. Create a <rendition> element with @scheme=”css” within the <tagsDecl> section of your TEI document. TEI Boilerplate will automatically convert this declaration to a HTML <style> element containing the CSS specified in the <rendition> element.
2. Edit the custom.css file in the css folder. This file is included by default by the HTML shell is meant for your customizations.
3. Edit teibp.css. We do not recommend this method, as you will have to keep track of your customizations and add merge them with future versions of TEI Boilerplate.
